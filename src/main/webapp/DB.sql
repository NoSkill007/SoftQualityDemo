CREATE SEQUENCE USUARIO_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE TABLE USUARIOS (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    APELLIDO VARCHAR2(50) NOT NULL,
    CORREO VARCHAR2(100) NOT NULL UNIQUE,
    CONTRASENA VARCHAR2(64) NOT NULL
);

CREATE OR REPLACE PROCEDURE REGISTRAR_USUARIO (
    P_NOMBRE IN VARCHAR2,
    P_APELLIDO IN VARCHAR2,
    P_CORREO IN VARCHAR2,
    P_CONTRASENA IN VARCHAR2
) AS
BEGIN
    INSERT INTO USUARIOS (
        ID,
        NOMBRE,
        APELLIDO,
        CORREO,
        CONTRASENA
    ) VALUES (
        USUARIO_SEQ.NEXTVAL,
        P_NOMBRE,
        P_APELLIDO,
        P_CORREO,
        P_CONTRASENA
    );
END;
/

CREATE SEQUENCE COLABORADORES_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE TABLE COLABORADORES (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    APELLIDO VARCHAR2(50) NOT NULL,
    CORREO VARCHAR2(100) NOT NULL UNIQUE,
    CONTRASENA VARCHAR2(64) NOT NULL
);

INSERT INTO COLABORADORES (
    ID,
    NOMBRE,
    APELLIDO,
    CORREO,
    CONTRASENA
) VALUES (
    COLABORADORES_SEQ.NEXTVAL,
    'Juan',
    'Perez',
    'Juan@gmail.com',
    '1234'
);

CREATE TABLE REMITENTE (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    CEDULA VARCHAR2(20) NOT NULL,
    CORREO_ELECTRONICO VARCHAR2(100) NOT NULL,
    TELEFONO VARCHAR2(15) NOT NULL
);

CREATE SEQUENCE REMITENTE_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE DESTINATARIO (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    CEDULA VARCHAR2(20) NOT NULL,
    CORREO_ELECTRONICO VARCHAR2(100) NOT NULL,
    TELEFONO VARCHAR2(15) NOT NULL,
    HORA_RETIRO VARCHAR2(10) NOT NULL
);

CREATE SEQUENCE DESTINATARIO_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE PAQUETE (
    ID NUMBER PRIMARY KEY,
    DESCRIPCION VARCHAR2(500) NOT NULL,
    ESPECIFICACIONES VARCHAR2(500) NOT NULL,
    DIRECCION_RETIRO VARCHAR2(200) NOT NULL,
    DIRECCION_ENTREGA VARCHAR2(200) NOT NULL,
    REMITENTE_ID NUMBER NOT NULL,
    DESTINATARIO_ID NUMBER NOT NULL,
    CONSTRAINT FK_REMITENTE FOREIGN KEY (REMITENTE_ID) REFERENCES REMITENTE(ID),
    CONSTRAINT FK_DESTINATARIO FOREIGN KEY (DESTINATARIO_ID) REFERENCES DESTINATARIO(ID)
);
ALTER TABLE PAQUETE ADD fecha DATE DEFAULT SYSDATE;

CREATE SEQUENCE PAQUETE_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE PROCEDURE INSERTAR_REMITENTE (
    P_NOMBRE IN VARCHAR2,
    P_CEDULA IN VARCHAR2,
    P_CORREO_ELECTRONICO IN VARCHAR2,
    P_TELEFONO IN VARCHAR2,
    P_ID OUT NUMBER
) AS
BEGIN
    SELECT
        REMITENTE_SEQ.NEXTVAL INTO P_ID
    FROM
        DUAL;
    INSERT INTO REMITENTE (
        ID,
        NOMBRE,
        CEDULA,
        CORREO_ELECTRONICO,
        TELEFONO
    ) VALUES (
        P_ID,
        P_NOMBRE,
        P_CEDULA,
        P_CORREO_ELECTRONICO,
        P_TELEFONO
    );
END;
/

CREATE OR REPLACE PROCEDURE INSERTAR_DESTINATARIO (
    P_NOMBRE IN VARCHAR2,
    P_CEDULA IN VARCHAR2,
    P_CORREO_ELECTRONICO IN VARCHAR2,
    P_TELEFONO IN VARCHAR2,
    P_HORA_RETIRO IN VARCHAR2,
    P_ID OUT NUMBER
) AS
BEGIN
    SELECT
        DESTINATARIO_SEQ.NEXTVAL INTO P_ID
    FROM
        DUAL;
    INSERT INTO DESTINATARIO (
        ID,
        NOMBRE,
        CEDULA,
        CORREO_ELECTRONICO,
        TELEFONO,
        HORA_RETIRO
    ) VALUES (
        P_ID,
        P_NOMBRE,
        P_CEDULA,
        P_CORREO_ELECTRONICO,
        P_TELEFONO,
        P_HORA_RETIRO
    );
END;
/

CREATE OR REPLACE PROCEDURE INSERTAR_PAQUETE (
    P_DESCRIPCION IN VARCHAR2,
    P_ESPECIFICACIONES IN VARCHAR2,
    P_DIRECCION_RETIRO IN VARCHAR2,
    P_DIRECCION_ENTREGA IN VARCHAR2,
    P_REMITENTE_ID IN NUMBER,
    P_DESTINATARIO_ID IN NUMBER,
    P_ID OUT NUMBER
) AS
BEGIN
    SELECT PAQUETE_SEQ.NEXTVAL INTO P_ID FROM DUAL;
    
    INSERT INTO PAQUETE (
        ID,
        DESCRIPCION,
        ESPECIFICACIONES,
        DIRECCION_RETIRO,
        DIRECCION_ENTREGA,
        REMITENTE_ID,
        DESTINATARIO_ID,
        fecha
    ) VALUES (
        P_ID,
        P_DESCRIPCION,
        P_ESPECIFICACIONES,
        P_DIRECCION_RETIRO,
        P_DIRECCION_ENTREGA,
        P_REMITENTE_ID,
        P_DESTINATARIO_ID,
        SYSDATE
    );
END;
/

SELECT
    *
FROM
    REMITENTE;

SELECT
    *
FROM
    DESTINATARIO;

SELECT
    *
FROM
    PAQUETE;

SELECT
    *
FROM
    USUARIOS;

SELECT
    *
FROM
    COLABORADORES;

DECLARE
    -- Variables para almacenar nombres de objetos
    v_seq_name   VARCHAR2(255);
    v_table_name VARCHAR2(255);
    v_proc_name  VARCHAR2(255);

BEGIN
    -- Eliminar secuencias
    FOR seq IN (SELECT sequence_name FROM user_sequences) LOOP
        v_seq_name := seq.sequence_name;
        EXECUTE IMMEDIATE 'DROP SEQUENCE ' || v_seq_name;
        DBMS_OUTPUT.PUT_LINE('Secuencia ' || v_seq_name || ' eliminada.');
    END LOOP;

    -- Eliminar tablas
    FOR tbl IN (SELECT table_name FROM user_tables) LOOP
        v_table_name := tbl.table_name;
        EXECUTE IMMEDIATE 'DROP TABLE ' || v_table_name || ' CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Tabla ' || v_table_name || ' eliminada.');
    END LOOP;

    -- Eliminar procedimientos
    FOR proc IN (SELECT object_name FROM user_procedures WHERE object_type = 'PROCEDURE') LOOP
        v_proc_name := proc.object_name;
        EXECUTE IMMEDIATE 'DROP PROCEDURE ' || v_proc_name;
        DBMS_OUTPUT.PUT_LINE('Procedimiento ' || v_proc_name || ' eliminado.');
    END LOOP;

    -- Mensaje final
    DBMS_OUTPUT.PUT_LINE('Eliminaci√≥n de secuencias, tablas y procedimientos completada.');
END;
/
